<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SuperConvert</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SuperConvert.Web.styles.css" asp-append-version="true" />
    <script src="https://kit.fontawesome.com/b09504b142.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js" crossorigin="anonymous"></script>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <img src="~/electric-generator.png" width="30" height="30" class="d-inline-block align-top" alt="">
                    SuperConvert
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" id="convertNowLink" asp-controller="Convert" asp-action="">Convert Now!</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="About">About</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - SuperConvert.Web - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        window.setInterval(convertNowLinkChange, 500);
        function convertNowLinkChange() {
            var element = document.getElementById("convertNowLink");
            element.classList.toggle("text-dark");
        }
        function copyToClipBoard() {
            // Get the text field
            var copyText = document.getElementById("hijridateinput");

            // Select the text field
            copyText.select();
            copyText.setSelectionRange(0, 99999); // For mobile devices

            // Copy the text inside the text field
            navigator.clipboard.writeText(copyText.value);

            // Alert the copied text
            alert("Copied the text: " + copyText.value);
        }
    </script>
    <script>
        const editor = ace.edit('editor', {
            mode: 'ace/mode/json',
            selectionStyle: 'text',
            showPrintMargin: false,
            theme: 'ace/theme/chrome'
        })

        const formatText = (spacing = 0) => {
            try {
                const current = JSON.parse(editor.getValue())
                editor.setValue(JSON.stringify(current, null, spacing))
                editor.focus()
                editor.selectAll()
                document.execCommand('copy')
            } catch (err) {
                alert('ERROR: Unable to parse text as JSON')
                throw err;
            }
        }

        editor.on('paste', (event) => {
            try {
                event.text = JSON.stringify(JSON.parse(event.text), null, 4)
                var hiddenObject = document.getElementById('jsonString');
                hiddenObject.value = event.text;
            } catch (err) {
                // meh
            }
        })

        const submitForm = () => {
            try {
                formatText(4);
                var hiddenObject = document.getElementById('jsonString');
                hiddenObject.value = editor.getValue();
                return true;
            } catch (err) {
                return false;
            }
        }


        document.getElementById('minify').addEventListener('click', () => formatText())
        document.getElementById('beautify').addEventListener('click', () => formatText(4))
    </script>
</body>
</html>
